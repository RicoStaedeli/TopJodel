version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "55433:5432"
    command: ["postgres", "-c", "listen_addresses=*"]

  mongo:
    image: mongo:7
    container_name: topjodel_mongo
    restart: unless-stopped
    env_file: .env
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodata:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ connectionStatus: 1 })"]
      interval: 5s
      timeout: 5s
      retries: 10

  neo4j:
    image: neo4j:5-community
    container_name: topjodel_neo4j
    restart: unless-stopped
    env_file: .env
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_server_memory_pagecache_size: 512M
      NEO4J_server_memory_heap_initial__size: 512M
      NEO4J_server_memory_heap_max__size: 512M
      # Uncomment to allow APOC if you later add the APOC plugin
      # NEO4JLABS_PLUGINS: '["apoc"]'
      # NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
    volumes:
      - neo4jdata:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:7474 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20

  topjodel:
    build:
      context: ./notebook
      dockerfile: Dockerfile
    container_name: topjodel_notebook
    restart: unless-stopped
    env_file: .env
    ports:
      - "9999:8888"
    environment:
      # Pass DB connection details into the notebook
      JUPYTER_TOKEN: ${JUPYTER_TOKEN}

      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

      APP_NEO4J_URI: ${APP_NEO4J_URI}
      APP_NEO4J_USER: ${APP_NEO4J_USER}
      APP_NEO4J_PASSWORD: ${APP_NEO4J_PASSWORD}
    volumes:
      - ./notebooks:/home/jovyan/work
    depends_on:
      mongo:
        condition: service_healthy
      neo4j:
        condition: service_healthy

volumes:
  pgdata:
  mongodata:
  neo4jdata:
